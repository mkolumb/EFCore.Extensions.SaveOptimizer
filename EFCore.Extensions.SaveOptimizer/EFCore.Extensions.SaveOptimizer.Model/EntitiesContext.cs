using Microsoft.EntityFrameworkCore;

#pragma warning disable CS8618

namespace EFCore.Extensions.SaveOptimizer.Model;

public class EntitiesContext : DbContext
{
    public DbSet<NonRelatedEntity> NonRelatedEntities { get; set; }

    public DbSet<AutoIncrementPrimaryKeyEntity> AutoIncrementPrimaryKeyEntities { get; set; }

    public EntitiesContext(DbContextOptions<EntitiesContext> options)
        : base(options)
    {
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        if (Database.ProviderName != null && Database.ProviderName.Contains("Firebird"))
        {
            const string decimalColumnType = "DECIMAL(12,6)";

            const string autoIncrementIdColumnType = "INTEGER GENERATED BY DEFAULT AS IDENTITY";

            modelBuilder.Entity<NonRelatedEntity>(
                eb =>
                {
                    eb.Property(b => b.SomeNullableDecimalProperty)
                        .HasPrecision(12, 6)
                        .HasColumnType(decimalColumnType);

                    eb.Property(b => b.SomeNonNullableDecimalProperty)
                        .HasPrecision(12, 6)
                        .HasColumnType(decimalColumnType);
                });

            modelBuilder.Entity<AutoIncrementPrimaryKeyEntity>(eb =>
            {
                eb.Property(b => b.Id)
                    .ValueGeneratedOnAdd()
                    .HasColumnType(autoIncrementIdColumnType);
            });
        }
        else
        {
            modelBuilder.Entity<NonRelatedEntity>(
                eb =>
                {
                    eb.Property(b => b.SomeNullableDecimalProperty)
                        .HasPrecision(12, 6);

                    eb.Property(b => b.SomeNonNullableDecimalProperty)
                        .HasPrecision(12, 6);
                });
        }

        modelBuilder.Entity<NonRelatedEntity>()
            .HasIndex(x => new { x.ConcurrencyToken, x.NonRelatedEntityId })
            .IsUnique(false);
    }
}
