name: "Build"
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_VERSION: 6.0.301
  GITHUB_FEED: "https://nuget.pkg.github.com/mkolumb/index.json"
  GITHUB_USER: mkolumb
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
jobs:
  build:
    name: Build
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    steps:
      - name: Get the sources
        uses: actions/checkout@v3
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Set RELEASE_VERSION
        run: |
          echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV
      - name: Checking RELEASE_VERSION
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "${{ env.DOTNET_VERSION }}"
      - name: Install Dotnet Tools
        run: dotnet tool restore
      - name: Run FAKE pull images
        run: dotnet fake build -t PullImages
      - name: Run FAKE build
        run: dotnet fake build
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2  
        if: success() || failure()        
        with:
          name: test-results
          path: ./TestResults/*.trx
      - name: Run FAKE pack
        run: |
          VERSION="${{ env.RELEASE_VERSION }}-${GITHUB_RUN_ID}"
          dotnet fake build -t pack -e PACKAGE_VERSION=$VERSION
      - name: Upload nuget artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./packages/*.nupkg
  prerelease:
    needs: build
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: nupkg
      - name: Push to GitHub Feed
        run: |
          for f in ./nupkg/*.nupkg
          do
            if [[ ${f} != *".symbols."* ]];then
              echo "Uploading package $f" to $GITHUB_FEED
              dotnet nuget push $f --api-key=$GITHUB_TOKEN --source=$GITHUB_FEED
            fi
            # curl -X PUT -u "$GITHUB_USER:$GITHUB_TOKEN" -F package=@$f $GITHUB_FEED
          done
