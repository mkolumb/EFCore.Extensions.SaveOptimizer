name: Build
'on':
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_VERSION: 6.0.301
jobs:
  build:
    name: Build
    runs-on: '${{ matrix.os }}'
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    steps:
      - name: Get the sources
        uses: actions/checkout@v3
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
      - name: Set RELEASE_VERSION
        run: >
          echo "RELEASE_VERSION=$(git describe --tags --abbrev=0)" >>
          $GITHUB_ENV
      - name: Checking RELEASE_VERSION
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
      - name: Install .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{ env.DOTNET_VERSION }}'
      - name: Install Dotnet Tools
        run: dotnet tool restore
      - name: Run FAKE pull images
        run: dotnet fake build -t PullImages
      - name: Run FAKE build
        run: dotnet fake build
      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        if: success() || failure()
        with:
          name: test-results
          path: ./TestResults/*.trx
      - name: Run FAKE pack develop
        if: github.ref == 'refs/heads/develop'
        run: |
          VERSION="${{ env.RELEASE_VERSION }}-${GITHUB_RUN_ID}"
          dotnet fake build -t pack -e PACKAGE_VERSION=$VERSION
      - name: Run FAKE pack main
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION="${{ env.RELEASE_VERSION }}"
          dotnet fake build -t pack -e PACKAGE_VERSION=$VERSION
      - name: Upload nuget artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: nupkg
          path: ./packages/*.nupkg
